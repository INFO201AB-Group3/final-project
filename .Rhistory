tabPanel("Data",
DT::dataTableOutput("table")
),
# Gives background information on data
tabPanel("Background Information",
includeMarkdown("data_info.md"))
),
# Tabs with data and background information
tabPanel("Trends",
mainPanel("Comparison Around The World in 2014")
)
))
source('./scripts/buildWorldMap.R')
# Final Project
# server.R
library(dplyr)
library(ggplot2)
library(data.table)
library(DT)
# Source files for functions
source('./scripts/buildBar.R')
source('./scripts/buildLine.R')
source('./scripts/buildWorldMap.R')
# Read in OECD data
my.df <- read.csv(file = "./data/OECD_stats.csv")
# Select desired columns
my.df <- my.df %>%  select(Country., Sex, Field, Level.of.education, Year., Value) %>%
rename(Country = Country., Year = Year.)
# Start shinyServer
# Returns a bunch of charts and graphs
shinyServer(function(input, output) {
# Renders horizontal bar chart from ui.R inputs
output$hbar <- renderPlotly({
return(BuildBar(my.df, input$sex, input$year, input$level, input$field))
})
# Renders line chart from ui.R inputs
output$line <- renderPlot({
print(BuildLine(my.df, input$country, input$sex1, input$level1))
})
# Render data table
output$table <- DT::renderDataTable({
DT::datatable(my.df, rownames = FALSE) %>%
formatStyle('Country',  color = 'black') %>%
formatStyle('Field',  color = 'black') %>%
formatStyle('Year',  color = 'black') %>%
formatStyle('Sex',  color = 'black') %>%
formatStyle('Level.of.education',  color = 'black') %>%
formatStyle("Value", color = 'black')
DT::datatable(my.df, rownames = FALSE)
})
#Renders the world map comparison
output$worldMap <- renderPlotly({
return(buildWorldMap(my.df))
})
#Renders the bar graph comparing rest of the world with the US. (BETTY)
})
runApp()
# Final Project
# server.R
library(dplyr)
library(ggplot2)
library(data.table)
library(DT)
# Source files for functions
source('./scripts/buildBar.R')
source('./scripts/buildLine.R')
source('./scripts/buildWorldMap.R')
# Read in OECD data
my.df <- read.csv(file = "./data/OECD_stats.csv")
# Select desired columns
my.df <- my.df %>%  select(Country., Sex, Field, Level.of.education, Year., Value) %>%
rename(Country = Country., Year = Year.)
# Start shinyServer
# Returns a bunch of charts and graphs
shinyServer(function(input, output) {
# Renders horizontal bar chart from ui.R inputs
output$hbar <- renderPlotly({
return(BuildBar(my.df, input$sex, input$year, input$level, input$field))
})
# Renders line chart from ui.R inputs
output$line <- renderPlot({
print(BuildLine(my.df, input$country, input$sex1, input$level1))
})
# Render data table
output$table <- DT::renderDataTable({
DT::datatable(my.df, rownames = FALSE) %>%
formatStyle('Country',  color = 'black') %>%
formatStyle('Field',  color = 'black') %>%
formatStyle('Year',  color = 'black') %>%
formatStyle('Sex',  color = 'black') %>%
formatStyle('Level.of.education',  color = 'black') %>%
formatStyle("Value", color = 'black')
DT::datatable(my.df, rownames = FALSE)
})
#Renders the world map comparison
output$worldMap <- renderPlotly({
print(buildWorldMap(my.df))
})
#Renders the bar graph comparing rest of the world with the US. (BETTY)
})
runApp()
runApp()
# Final Project
# ui.R
# install.packages("DT")
library(shiny)
library(shinythemes)
library(plotly)
library(DT)
library(markdown)
# Shiny ui
# Multi-page layout
shinyUI(navbarPage("Analysis of Graduates by Field", theme = shinytheme("superhero"),
# tabPanel shows horizontal bar chart comparing countries based on user inputs
tabPanel('Country Comparison',
titlePanel("Comparing Degrees Awarded In Different Countries"),
sidebarLayout(
sidebarPanel(
# Sex dropdown widget
selectInput("sex", label = h3("Gender"),
choices = list("Women" = "Women",
"Men" = "Men"),
selected = "Women"),
# Year dropdown widget
selectInput("year", label = h3("Year"),
choices = list("2005" = "2005",
"2010" = "2010",
"2011" = "2011",
"2012" = "2012",
"2013" = "2013",
"2014" = "2014"),
selected = "2014"),
# Education level dropdown widget
selectInput("level", label = h3("Education Level"),
choices = list("2-Year College" = "2-year college",
"Bachelors" = "Bachelor's",
"Masters" = "Master's",
"Doctoral" = "Doctoral",
"All" = "Total tertiary"),
selected = "Bachelor's"),
# Field dropdown widget
selectInput("field", label = h3("Field"),
choices = list("Science, Mathematics and Computing" = "Science, mathematics and computing",
"Education" = "Education",
"Humanities and Arts" = "Humanities and arts",
"Social Sciences, Business and Law" = "Social sciences, business and law",
"Engineering, Manufacturing and Construction" = "Engineering, manufacturing and construction",
"Agriculture and Veterinary" = "Agriculture and veterinary",
"Health and Welfare" = "Health and Welfare",
"Services" = "Services"),
selected = "Science, mathematics and computing"),
hr(),
helpText("Data from the Organisation for Economic Co-operation and Development (OECD)")
),
# Displays horizontal bar chart
mainPanel(
plotlyOutput('hbar')
)
)
),
# tabPanel to show line charts of field trends by country
tabPanel('Field Comparison',
titlePanel('Analyzing Field Trends By Country'),
sidebarLayout(
sidebarPanel(
textInput('country', label=h3("Find a Country"), value = 'United States'),
# Sex dropdown widget
selectInput("sex1", label = h3("Gender"),
choices = list("Women" = "Women",
"Men" = "Men"),
selected = "Women"),
# Education level dropdown widget
selectInput("level1", label = h3("Education Level"),
choices = list("2-Year College" = "2-year college",
"Bachelors" = "Bachelor's",
"Masters" = "Master's",
"Doctoral" = "Doctoral",
"All" = "Total tertiary"),
selected = "Bachelor's"),
hr(),
helpText("Data from the Organisation for Economic Co-operation and Development (OECD)")
),
# Displays the line charts
mainPanel(
plotOutput('line')
)
)
),
# Tabs with data and background information
navbarMenu("More Information",
# Show the data set
tabPanel("Data",
DT::dataTableOutput("table")
),
# Gives background information on data
tabPanel("Background Information",
includeMarkdown("data_info.md"))
),
# Tabs with data and background information
navbarMenu("Trends",
# Compares tertiary education in women
tabPanel("Comparison Around The World in 2014")
)
# BETTY, ADD YOUR TAB HERE.
))
runApp()
# Final Project
# server.R
library(dplyr)
library(ggplot2)
library(data.table)
library(DT)
# Source files for functions
source('./scripts/buildBar.R')
source('./scripts/buildLine.R')
source('./scripts/buildWorldMap.R')
# Read in OECD data
my.df <- read.csv(file = "./data/OECD_stats.csv")
# Select desired columns
my.df <- my.df %>%  select(Country., Sex, Field, Level.of.education, Year., Value) %>%
rename(Country = Country., Year = Year.)
# Start shinyServer
# Returns a bunch of charts and graphs
shinyServer(function(input, output) {
# Renders horizontal bar chart from ui.R inputs
output$hbar <- renderPlotly({
return(BuildBar(my.df, input$sex, input$year, input$level, input$field))
})
# Renders line chart from ui.R inputs
output$line <- renderPlot({
print(BuildLine(my.df, input$country, input$sex1, input$level1))
})
# Render data table
output$table <- DT::renderDataTable({
DT::datatable(my.df, rownames = FALSE) %>%
formatStyle('Country',  color = 'black') %>%
formatStyle('Field',  color = 'black') %>%
formatStyle('Year',  color = 'black') %>%
formatStyle('Sex',  color = 'black') %>%
formatStyle('Level.of.education',  color = 'black') %>%
formatStyle("Value", color = 'black')
DT::datatable(my.df, rownames = FALSE)
})
#Renders the world map comparison
output$worldMap <- renderPlotly({
return(buildWorldMap(my.df))
})
#Renders the bar graph comparing rest of the world with the US. (BETTY)
})
runApp()
library(dplyr)
library(plotly)
#Test
#data <- read.csv(file = "./data/OECD_stats.csv")
#data <- data %>%  select(Country., Sex, Field, Level.of.education, Year., Value) %>%
#rename(Country = Country., Year = Year.)
buildWorldMap <- function(data) {
#Gets rid of all the N/A's
dataset <- na.omit(data)
#Breaks down the data to just Tertiary education among women in 2014
data <- dataset %>%
select(Country, Sex, Field, Year, Value, Level.of.education) %>%
filter(Year == 2014) %>%
filter(Field == "Science, mathematics and computing") %>%
filter(Sex == "Women") %>%
filter(Level.of.education == "Total tertiary")
#Adds a column of abbreviations for each country.
data$Code <- c("AUS" ,"AUT", "CZE","DNK", "FIN", "FRA", "DEU", "GRC", "HUN","IRL",
"ITA", "JPN"," PRK", "LUX", "MEX","NLD", "NZL", "NOR", "POL","PRT",
"SVK", "ESP", "SWE","CHE", "TUR","GBR", "USA", "BRA", "CHL","COL",
"EST","IDN","LVA", "RUS", "SAU", "SVN")
# light grey boundaries
l <- list(color = toRGB("grey"), width = 1)
# specify map projection/options
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
#Plot world map.
worldMap <- plot_geo(data) %>%
add_trace(
z = ~Value, color = ~Value, colors = 'Blues',
text = ~Country, locations = ~Code, marker = list(line = l)
) %>%
colorbar(title = 'Percentage') %>%
layout(
title = 'Comparing Total Tertiary Education Around the World in 2014',
geo = g
)
}
runApp()
# Final Project
# ui.R
# install.packages("DT")
library(shiny)
library(shinythemes)
library(plotly)
library(DT)
library(markdown)
# Shiny ui
# Multi-page layout
shinyUI(navbarPage("Analysis of Graduates by Field", theme = shinytheme("superhero"),
# tabPanel shows horizontal bar chart comparing countries based on user inputs
tabPanel('Country Comparison',
titlePanel("Comparing Degrees Awarded In Different Countries"),
sidebarLayout(
sidebarPanel(
# Sex dropdown widget
selectInput("sex", label = h3("Gender"),
choices = list("Women" = "Women",
"Men" = "Men"),
selected = "Women"),
# Year dropdown widget
selectInput("year", label = h3("Year"),
choices = list("2005" = "2005",
"2010" = "2010",
"2011" = "2011",
"2012" = "2012",
"2013" = "2013",
"2014" = "2014"),
selected = "2014"),
# Education level dropdown widget
selectInput("level", label = h3("Education Level"),
choices = list("2-Year College" = "2-year college",
"Bachelors" = "Bachelor's",
"Masters" = "Master's",
"Doctoral" = "Doctoral",
"All" = "Total tertiary"),
selected = "Bachelor's"),
# Field dropdown widget
selectInput("field", label = h3("Field"),
choices = list("Science, Mathematics and Computing" = "Science, mathematics and computing",
"Education" = "Education",
"Humanities and Arts" = "Humanities and arts",
"Social Sciences, Business and Law" = "Social sciences, business and law",
"Engineering, Manufacturing and Construction" = "Engineering, manufacturing and construction",
"Agriculture and Veterinary" = "Agriculture and veterinary",
"Health and Welfare" = "Health and Welfare",
"Services" = "Services"),
selected = "Science, mathematics and computing"),
hr(),
helpText("Data from the Organisation for Economic Co-operation and Development (OECD)")
),
# Displays horizontal bar chart
mainPanel(
plotlyOutput('hbar')
)
)
),
# tabPanel to show line charts of field trends by country
tabPanel('Field Comparison',
titlePanel('Analyzing Field Trends By Country'),
sidebarLayout(
sidebarPanel(
textInput('country', label=h3("Find a Country"), value = 'United States'),
# Sex dropdown widget
selectInput("sex1", label = h3("Gender"),
choices = list("Women" = "Women",
"Men" = "Men"),
selected = "Women"),
# Education level dropdown widget
selectInput("level1", label = h3("Education Level"),
choices = list("2-Year College" = "2-year college",
"Bachelors" = "Bachelor's",
"Masters" = "Master's",
"Doctoral" = "Doctoral",
"All" = "Total tertiary"),
selected = "Bachelor's"),
hr(),
helpText("Data from the Organisation for Economic Co-operation and Development (OECD)")
),
# Displays the line charts
mainPanel(
plotOutput('line')
)
)
),
# Tabs with data and background information
navbarMenu("More Information",
# Show the data set
tabPanel("Data",
DT::dataTableOutput("table")
),
# Gives background information on data
tabPanel("Background Information",
includeMarkdown("data_info.md"))
),
# Tabs with data and background information
navbarMenu("Trends",
# Compares tertiary education in women
tabPanel("Comparison Around The World in 2014",
mainPanel("worldMap")
)
# BETTY, ADD YOUR TAB HERE.
)
))
runApp()
# Final Project
# ui.R
# install.packages("DT")
library(shiny)
library(shinythemes)
library(plotly)
library(DT)
library(markdown)
# Shiny ui
# Multi-page layout
shinyUI(navbarPage("Analysis of Graduates by Field", theme = shinytheme("superhero"),
# tabPanel shows horizontal bar chart comparing countries based on user inputs
tabPanel('Country Comparison',
titlePanel("Comparing Degrees Awarded In Different Countries"),
sidebarLayout(
sidebarPanel(
# Sex dropdown widget
selectInput("sex", label = h3("Gender"),
choices = list("Women" = "Women",
"Men" = "Men"),
selected = "Women"),
# Year dropdown widget
selectInput("year", label = h3("Year"),
choices = list("2005" = "2005",
"2010" = "2010",
"2011" = "2011",
"2012" = "2012",
"2013" = "2013",
"2014" = "2014"),
selected = "2014"),
# Education level dropdown widget
selectInput("level", label = h3("Education Level"),
choices = list("2-Year College" = "2-year college",
"Bachelors" = "Bachelor's",
"Masters" = "Master's",
"Doctoral" = "Doctoral",
"All" = "Total tertiary"),
selected = "Bachelor's"),
# Field dropdown widget
selectInput("field", label = h3("Field"),
choices = list("Science, Mathematics and Computing" = "Science, mathematics and computing",
"Education" = "Education",
"Humanities and Arts" = "Humanities and arts",
"Social Sciences, Business and Law" = "Social sciences, business and law",
"Engineering, Manufacturing and Construction" = "Engineering, manufacturing and construction",
"Agriculture and Veterinary" = "Agriculture and veterinary",
"Health and Welfare" = "Health and Welfare",
"Services" = "Services"),
selected = "Science, mathematics and computing"),
hr(),
helpText("Data from the Organisation for Economic Co-operation and Development (OECD)")
),
# Displays horizontal bar chart
mainPanel(
plotlyOutput('hbar')
)
)
),
# tabPanel to show line charts of field trends by country
tabPanel('Field Comparison',
titlePanel('Analyzing Field Trends By Country'),
sidebarLayout(
sidebarPanel(
textInput('country', label=h3("Find a Country"), value = 'United States'),
# Sex dropdown widget
selectInput("sex1", label = h3("Gender"),
choices = list("Women" = "Women",
"Men" = "Men"),
selected = "Women"),
# Education level dropdown widget
selectInput("level1", label = h3("Education Level"),
choices = list("2-Year College" = "2-year college",
"Bachelors" = "Bachelor's",
"Masters" = "Master's",
"Doctoral" = "Doctoral",
"All" = "Total tertiary"),
selected = "Bachelor's"),
hr(),
helpText("Data from the Organisation for Economic Co-operation and Development (OECD)")
),
# Displays the line charts
mainPanel(
plotOutput('line')
)
)
),
# Tabs with data and background information
navbarMenu("More Information",
# Show the data set
tabPanel("Data",
DT::dataTableOutput("table")
),
# Gives background information on data
tabPanel("Background Information",
includeMarkdown("data_info.md"))
),
# Tabs with data and background information
navbarMenu("Trends",
# Compares tertiary education in women
tabPanel("Comparison Around The World in 2014",
mainPanel(
plotlyOutput("worldMap")
)
)
# BETTY, ADD YOUR TAB HERE.
)
))
runApp()
runApp()
runApp('C:/Users/Mithula/Desktop/Info-201/a8-building-apps-mithulararmal')
runApp()
runApp()
runApp()
shiny::runApp()
